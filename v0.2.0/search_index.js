var documenterSearchIndex = {"docs":
[{"location":"#LinearMPC.jl","page":"Home","title":"LinearMPC.jl","text":"","category":"section"},{"location":"#Functions","page":"Home","title":"Functions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [LinearMPC]","category":"page"},{"location":"#LinearMPC.add_constraint!-Tuple{LinearMPC.MPC}","page":"Home","title":"LinearMPC.add_constraint!","text":"add_constraint!(mpc::MPC;\n    Ax, Au, Ar, Aw, Ad, Aup,\n    ub, lb, ks, soft, binary, prio)\nadd_constraint!(mpc;Ax,Au,ub,lb,\n                ks, soft, binary,prio)\n\nAdds the constraints lb ≤ Ax xₖ + Au uₖ ≤ ub for the time steps k ∈ ks (additional terms Ar rₖ, Aw wₖ, Ad dₖ, Aup u⁻ₖ are possible)\n\nsoft marks if the constraint should be softened (default false)\nbinary marks if either the upper or lower bounds should be enforced with equality (default false)\nprio marks the relative priority of the constraint (default 0)\n\n\n\n\n\n","category":"method"},{"location":"#LinearMPC.compute_control-Tuple{Union{LinearMPC.ExplicitMPC, LinearMPC.MPC}, Any}","page":"Home","title":"LinearMPC.compute_control","text":"compute_control(mpc,x;r,uprev)\n\nFor a given MPC mpc and state x, compute the optimal control action.  Optional arguments: \n\nr - reference value\nuprev - previous control action\n\nall of them defaults to zero.\n\n\n\n\n\n","category":"method"},{"location":"#LinearMPC.move_block!-Tuple{Any, Vector{Int64}}","page":"Home","title":"LinearMPC.move_block!","text":"move_block!(mpc,block)\n\nReduce the number of controls by keeping it constant in blocks. For example, block=[2,1,3] keeps the control constant for 2 time-steps, 1 time step, and 3 time steps.\n\nif sum(block) ≠ mpc.Nc, the resulting block will be padded or clipped\nif block is an Int, a vector with constant block size is created\n\n\n\n\n\n","category":"method"},{"location":"#LinearMPC.mpc2mpqp-Tuple{LinearMPC.MPC}","page":"Home","title":"LinearMPC.mpc2mpqp","text":"mpc2mpqp(mpc)\n\nFor a given MPC structure mpc, form the multi-parametric QP mpQP. \n\n\n\n\n\n","category":"method"},{"location":"#LinearMPC.set_bounds!-Tuple{LinearMPC.MPC}","page":"Home","title":"LinearMPC.set_bounds!","text":"set_bounds!(mpc;umin,umax)\n\nSets the bounds umin ≤ u ≤ umax \n\n\n\n\n\n","category":"method"},{"location":"#LinearMPC.set_output_bounds!-Tuple{LinearMPC.MPC}","page":"Home","title":"LinearMPC.set_output_bounds!","text":"set_output_bounds!(mpc;ymin,ymax,\n                ks, soft, binary,prio)\n\nAdds the constraints lb ≤ C x  ≤ ub for the time steps k ∈ ks \n\nsoft marks if the constraint should be softened (default false)\nbinary marks if either the upper or lower bounds should be enforced with equality (default false)\nprio marks the relative priority of the constraint (default 0)\n\n\n\n\n\n","category":"method"},{"location":"#LinearMPC.set_prestabilizing_feedback!-Tuple{Any, AbstractMatrix}","page":"Home","title":"LinearMPC.set_prestabilizing_feedback!","text":"set_prestabilizing_feedback!(mpc,K)\n\nSets the prestabilizing feedback K\n\n\n\n\n\n","category":"method"},{"location":"#LinearMPC.set_prestabilizing_feedback!-Tuple{Any}","page":"Home","title":"LinearMPC.set_prestabilizing_feedback!","text":"set_prestabilizing_feedback!(mpc)\n\nSets the prestabilizing feedback K to the infinte horizon LQR gain`\n\n\n\n\n\n","category":"method"},{"location":"#LinearMPC.set_terminal_cost!-Tuple{Any}","page":"Home","title":"LinearMPC.set_terminal_cost!","text":"set_terminal_cost!(mpc)\n\nSets the terminal cost Qf to the inifinite horizon LQR cost \n\n\n\n\n\n","category":"method"},{"location":"#LinearMPC.set_weights!-Tuple{LinearMPC.MPC}","page":"Home","title":"LinearMPC.set_weights!","text":"set_weights!(mpc;Q,R,Rr,S,rho,Qf)\n\nThe weights in the objective function `xN' Qf xN^T + ∑ (C xₖ - rₖ)' Q (C xₖ - rₖ)  + uₖ' R uₖ + Δuₖ' Rr Δuₖ + xₖ' S uₖ \n\nA vector is interpreted as a diagonal matrix.\n\nrho Is an additional weight for the soft constraints (default value: 1e6)\n\n\n\n\n\n","category":"method"},{"location":"#LinearMPC.setup!-Tuple{LinearMPC.MPC}","page":"Home","title":"LinearMPC.setup!","text":"setup!(mpc)\n\nSets up the mpc given its current parameters and settings   Internally, this means generating an mpQP, and setting up a DAQP workspace.\n\n\n\n\n\n","category":"method"}]
}
